' Gambas module file

Public Function EncryptSimple(txtinput As String) As String

  Dim dw As String
  Dim i As Integer
  Dim a As String
  Dim xx As String

  dw = ""
  For i = 1 To Len(txtinput)
    a = Mid(txtinput, i, 1)
    xx = Asc(a)
    If Len(xx) = 1 Then
      xx = "00" & xx
    Else If Len(xx) = 2 Then
      xx = "0" & xx
    Endif
    dw = dw & xx
  Next

  Return dw

End

Public Function DecryptSimple(txtoutput As String) As String

  Dim Iw As String
  Dim i As Integer
  Dim a As String
  Dim xx As String

  xx = txtoutput
  Iw = ""
  For i = 0 To (Len(xx) / 3) - 1
    a = CInt(Mid(xx, ((i * 3) + 1), 3))
    Iw = Iw & Chr(a)
  Next

  Return Iw

End

Public Function DecryptDBPass(txtoutput As String, UseSSL As Boolean) As String

  Dim xval As String

  If UseSSL = True Then
    xval = DecryptSSL(txtoutput, modHelpVariable.$CryptDBVal)
  Else
    xval = DecryptSimple(txtoutput)
  Endif
  Return xval

End

Public Function DecryptSSL(txtoutput As String, CryptValue As String) As String

  Dim xval As String

  If System.Exist("openssl") Then
    Shell "echo " & Quote(txtoutput) & " | openssl enc -base64 -d -aes-256-cbc -nosalt -pass pass:" & CryptValue To xval
    If Not Trim(xval) Then
      ''to resolve encryption with older version of openssl
      Shell "echo " & Quote(txtoutput) & " | openssl enc -base64 -md md5 -d -aes-256-cbc -nosalt -pass pass:" & CryptValue To xval
    Endif
  Endif

  Return Trim(xval)

End

Public Function GetRandomPassword() As String

  Dim xx As String

  Exec ["openssl", "rand", "-hex", "6"] To xx
  Return Trim(xx)

End
